<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="MyNotes.Core.View.TagsEditor"
             x:Name="View_RootUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:view="using:MyNotes.Core.View"
             xmlns:model="using:MyNotes.Core.Model"
             xmlns:dto="using:MyNotes.Core.Dto"
             xmlns:controls="using:CommunityToolkit.WinUI.Controls"
             xmlns:ui="using:CommunityToolkit.WinUI"
             xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
             Width="350"
             Height="560">

  <Grid RowSpacing="8">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <!--#region Header -->
    <Grid Grid.Row="0"
          Padding="12,8,12,0">
      <TextBlock Text="Tags"
                 Style="{StaticResource SubtitleTextBlockStyle}" />
      <Button x:Name="View_EditButton"
              Style="{StaticResource AppFontIconNormalButtonStyle}"
              HorizontalAlignment="Right"
              Content="&#xE70F;">
        <Button.Flyout>
          <MenuFlyout Placement="LeftEdgeAlignedTop">
            <MenuFlyoutItem Icon="Add"
                            Text="Add">
              <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="Click">
                  <interactivity:GoToStateAction TargetObject="{x:Bind View_RootUserControl}"
                                                 StateName="EditorModeAdd" />
                </interactivity:EventTriggerBehavior>
              </interactivity:Interaction.Behaviors>
            </MenuFlyoutItem>
            <MenuFlyoutItem Icon="Delete"
                            Text="Delete">
              <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="Click">
                  <interactivity:ChangePropertyAction TargetObject="{x:Bind View_DeleteTagsTeachingTip}"
                                                      PropertyName="IsOpen"
                                                      Value="True" />
                </interactivity:EventTriggerBehavior>
              </interactivity:Interaction.Behaviors>
            </MenuFlyoutItem>
          </MenuFlyout>
        </Button.Flyout>
      </Button>
    </Grid>
    <!--#endregion -->

    <!--#region Search & Add Tag -->
    <Grid Grid.Row="1">
      <!-- Search -->
      <AutoSuggestBox x:Name="View_SearchAutoSuggestBox"
                      Margin="12,0"
                      PlaceholderText="Search tags"
                      QueryIcon="Find">
        <interactivity:Interaction.Behaviors>
          <interactivity:EventTriggerBehavior EventName="QuerySubmitted">
            <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.SearchTagCommand}"
                                               CommandParameter="{x:Bind View_SearchAutoSuggestBox.Text, Mode=OneWay}" />
          </interactivity:EventTriggerBehavior>
          <interactivity:EventTriggerBehavior EventName="TextChanged">
            <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.ResetSearchCommand}"
                                               CommandParameter="{x:Bind View_SearchAutoSuggestBox.Text, Mode=OneWay}" />
          </interactivity:EventTriggerBehavior>
        </interactivity:Interaction.Behaviors>
      </AutoSuggestBox>
      
      <!-- New Tag -->
      <Grid x:Name="View_AddTagGrid"
            RowSpacing="4"
            ColumnSpacing="8"
            Padding="12,4,12,12"
            Background="{StaticResource SubtleFillColorSecondaryBrush}"
            Visibility="Collapsed">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="New tag"
                   Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   VerticalAlignment="Center" />
        <Button x:Name="View_CloseAddModeButton"
                Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource AppFontIconNormalButtonStyle}"
                Content="&#xE711;"
                HorizontalAlignment="Right">
          <interactivity:Interaction.Behaviors>
            <interactivity:EventTriggerBehavior EventName="Click">
              <interactivity:GoToStateAction TargetObject="{x:Bind View_RootUserControl}"
                                             StateName="EditorModeNormal" />
            </interactivity:EventTriggerBehavior>
          </interactivity:Interaction.Behaviors>
        </Button>
        <view:TagColorSelector x:Name="View_TagColorSelector"
                               Grid.Row="1"
                               Grid.Column="0" />
        <TextBox x:Name="View_TagInputTextBox"
                 Grid.Row="1"
                 Grid.Column="1"
                 PlaceholderText="Enter a tag" />
        <Button x:Name="View_AddTagButton"
                Grid.Row="1"
                Grid.Column="2"
                Content="Add"
                Style="{StaticResource AccentButtonStyle}"
                Command="{x:Bind ViewModel.AddTagCommand}">
          <Button.CommandParameter>
            <dto:TagCommandParameterDto Text="{x:Bind View_TagInputTextBox.Text, Mode=OneWay}"
                                        Color="{x:Bind View_TagColorSelector.TagColor, Mode=OneWay}" />
          </Button.CommandParameter>
        </Button>
      </Grid>
    </Grid>
    <!--#endregion -->

    <!--#region Tags View -->
    <Grid Grid.Row="2">
      <SemanticZoom x:Name="View_TagsSemanticZoom">
        <!--#region ZoomedOutView: Group -->
        <SemanticZoom.ZoomedOutView>
          <GridView x:Name="View_TagsGroupGridView"
                    ItemsSource="{x:Bind ViewModel.TagsCollectionViewSource.View.CollectionGroups, Mode=OneWay}"
                    Margin="10,8,0,0">
            <GridView.ItemsPanel>
              <ItemsPanelTemplate>
                <ItemsWrapGrid Orientation="Horizontal"
                               MaximumRowsOrColumns="5"
                               HorizontalAlignment="Center" />
              </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemContainerStyle>
              <Style TargetType="GridViewItem"
                     BasedOn="{StaticResource DefaultGridViewItemStyle}">
                <Setter Property="Margin"
                        Value="8" />
              </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Group.Key}"
                           FontSize="20" />
              </DataTemplate>
            </GridView.ItemTemplate>
          </GridView>
        </SemanticZoom.ZoomedOutView>
        <!--#endregion -->

        <!--#region ZoomedInView: Tags List -->
        <SemanticZoom.ZoomedInView>
          <ListView x:Name="View_TagsListView"
                    ItemsSource="{x:Bind ViewModel.TagsCollectionViewSource.View, Mode=OneWay}"
                    SelectionMode="Multiple"
                    IsMultiSelectCheckBoxEnabled="False"
                    SelectionChanged="View_TagsListView_SelectionChanged">
            <ListView.ItemsPanel>
              <ItemsPanelTemplate>
                <ItemsWrapGrid Orientation="Horizontal"
                               MaximumRowsOrColumns="2"
                               ItemWidth="170"
                               Margin="0,0,8,0" />
              </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
              <DataTemplate x:DataType="model:Tag">
                <Grid DataContext="{x:Bind}"
                      ColumnSpacing="8">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Ellipse Grid.Column="0"
                           Width="12"
                           Height="12"
                           Stretch="Fill"
                           Fill="{x:Bind Color, Converter={StaticResource TagColorToBackgroundBrushConverter}}"
                           Stroke="{x:Bind Color, Converter={StaticResource TagColorToForegroundBrushConverter}}"
                           StrokeThickness="2.5" 
                           VerticalAlignment="Center"
                           Margin="0,3,0,0"/>
                  <TextBlock Grid.Column="1"
                             Text="{x:Bind Text}" />
                  <Grid.ContextFlyout>
                    <MenuFlyout Placement="Bottom">
                      <MenuFlyoutItem Text="Delete"
                                      Icon="Delete" />
                    </MenuFlyout>
                  </Grid.ContextFlyout>
                </Grid>
              </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.GroupStyle>
              <GroupStyle HidesIfEmpty="True">
                <GroupStyle.HeaderTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Key}" />
                  </DataTemplate>
                </GroupStyle.HeaderTemplate>
              </GroupStyle>
            </ListView.GroupStyle>
          </ListView>
        </SemanticZoom.ZoomedInView>
        <!--#endregion -->
      </SemanticZoom>
    </Grid>
    <!--#endregion -->

    <!--#region Selected Tag CommandBar -->
    <Grid x:Name="View_CommandBarGrid"
          Grid.Row="3"
          Background="{StaticResource AcrylicInAppFillColorBaseBrush}"
          Padding="8"
          ColumnSpacing="6"
          MaxHeight="88"
          Visibility="Visible">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <ScrollView Grid.Column="0"
                  ContentOrientation="Vertical"
                  Padding="0,0,8,0"
                  VerticalAlignment="Bottom">
        <ItemsRepeater ItemsSource="{x:Bind ViewModel.SelectedTags}"
                       Margin="0,4">
          <ItemsRepeater.Layout>
            <controls:WrapLayout HorizontalSpacing="6"
                                 VerticalSpacing="6" />
          </ItemsRepeater.Layout>

          <ItemsRepeater.ItemTemplate>
            <DataTemplate x:DataType="model:Tag">
              <view:AppTagButton x:Name="View_SelectedTagButton"
                                 DataContext="{x:Bind}"
                                 Content="{x:Bind Text}"
                                 Background="{x:Bind Color, Converter={StaticResource TagColorToBackgroundBrushConverter}}"
                                 Foreground="{x:Bind Color, Converter={StaticResource TagColorToForegroundBrushConverter}}"
                                 Click="View_SelectedTagButton_Click"
                                 DeleteButtonClick="View_SelectedTagButton_DeleteButtonClick" />
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollView>

      <StackPanel Grid.Column="1"
                  VerticalAlignment="Bottom"
                  Spacing="4">
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
          <Button x:Name="View_CommandBarDeselectAllButton"
                  Style="{StaticResource AppFontIconNormalButtonStyle}"
                  Content="&#xE8E6;"
                  Click="View_CommandBarDeselectAllButton_Click" />
          <Button x:Name="View_CommandBarInclusionModeButton"
                  Style="{StaticResource AppIconNormalButtonStyle}"
                  Padding="6"
                  Command="{x:Bind ViewModel.ToggleInclusionCommand}" >
            <IconSourceElement IconSource="{x:Bind ViewModel.IsIntersectSelection, Converter={StaticResource BoolToSetOperationIconSourceConverter}, Mode=OneWay}" />
          </Button>
        </StackPanel>
        <Button x:Name="View_CommandBarExploreButton"
                Content="Explore"
                Style="{StaticResource AccentButtonStyle}"
                Command="{x:Bind ViewModel.ExploreTagsCommand}"/>
      </StackPanel>
    </Grid>

    <TeachingTip x:Name="View_DeleteTagsTeachingTip"
                 Target="{x:Bind View_CommandBarGrid}"
                 Title="Delete selected tags"
                 PreferredPlacement="Top"
                 ActionButtonContent="Delete"
                 ActionButtonStyle="{StaticResource AccentButtonStyle}"
                 ActionButtonCommand="{x:Bind ViewModel.DeleteTagsCommand}"
                 CloseButtonContent="Close"
                 IsLightDismissEnabled="True">
      <interactivity:Interaction.Behaviors>
        <interactivity:EventTriggerBehavior EventName="ActionButtonClick">
          <interactivity:ChangePropertyAction TargetObject="{x:Bind View_DeleteTagsTeachingTip}"
                                              PropertyName="IsOpen"
                                              Value="False" />
        </interactivity:EventTriggerBehavior>
      </interactivity:Interaction.Behaviors>
    </TeachingTip>
    <!--#endregion -->

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="EditorModeStates">
        <VisualState x:Name="EditorModeNormal" />

        <VisualState x:Name="EditorModeAdd">
          <VisualState.Setters>
            <Setter Target="View_SearchAutoSuggestBox.Visibility"
                    Value="Collapsed" />
            <Setter Target="View_AddTagGrid.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="SelectionStates">
        <VisualState x:Name="Selected" />
        <VisualState x:Name="Unselected">
          <VisualState.StateTriggers>
            <ui:IsNullOrEmptyStateTrigger Value="{x:Bind ViewModel.SelectedTags}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="View_CommandBarGrid.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
