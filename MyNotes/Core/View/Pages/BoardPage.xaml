<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="MyNotes.Core.View.BoardPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:ui="using:CommunityToolkit.WinUI"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:media="using:CommunityToolkit.WinUI.Media"
      xmlns:model="using:MyNotes.Core.Model"
      xmlns:view="using:MyNotes.Core.View"
      xmlns:viewmodel="using:MyNotes.Core.ViewModel"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors">

  <Page.Resources>
    <!--#region CollectionViewSource -->
    <CollectionViewSource x:Name="NotesCollectionViewSource"
                          Source="{x:Bind ViewModel.NoteViewModels}" />
    <!--#endregion -->

    <!--#region GridView ItemTemplate: Grid Style-->
    <DataTemplate x:Key="GridViewItemTemplate_GridStyle"
                  x:DataType="viewmodel:NoteViewModel">
      <UserControl x:Name="Template_RootUserControl"
                   Margin="6"
                   RequestedTheme="Light"
                   PointerEntered="Template_RootUserControl_PointerEntered"
                   PointerExited="Template_RootUserControl_PointerExited">
        <Grid x:Name="Template_RootGrid"
              Background="{x:Bind Note.Background, Converter={StaticResource AlphaBlendingWhiteConverter}, Mode=OneWay}"
              CornerRadius="8"
              BorderBrush="{StaticResource ControlStrokeColorDefaultBrush}"
              BorderThickness="1"
              Translation="0,0,12">

          <Grid.Shadow>
            <ThemeShadow />
          </Grid.Shadow>

          <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition />
          </Grid.RowDefinitions>

          <!--Note Header-->
          <Grid Grid.Row="0"
                Background="{x:Bind Note.Background, Converter={StaticResource ColorToLayerBrushConverter}, Mode=OneWay}"
                BorderBrush="{StaticResource ControlStrokeColorDefaultBrush}"
                BorderThickness="0,0,0,1"
                CornerRadius="6,6,0,0">

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--Bookmark Button-->
            <Button x:Name="Template_BookmarkButton"
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    Style="{StaticResource AppFontIconNormalButtonStyle}"
                    Content="{x:Bind Note.IsBookmarked, Converter={StaticResource BoolToBookmarkIconGlyphConverter}, Mode=OneWay}"
                    CornerRadius="8,4,4,4"
                    Visibility="Collapsed"
                    IsTabStop="False"
                    Command="{x:Bind BookmarkNoteCommand}" />

            <!--Note Title-->
            <TextBlock x:Name="Template_TitleTextBlock"
                       Grid.Column="1"
                       Padding="6,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{x:Bind Note.Title, Mode=OneWay}"
                       TextTrimming="CharacterEllipsis"
                       TextWrapping="NoWrap"
                       Style="{StaticResource BodyStrongTextBlockStyle}">
              <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="DoubleTapped">
                  <interactivity:InvokeCommandAction Command="{x:Bind OpenWindowCommand}"
                                                     CommandParameter="{x:Bind Note.IsTrashed, Converter={StaticResource BoolNegationConverter}}" />
                </interactivity:EventTriggerBehavior>
              </interactivity:Interaction.Behaviors>
            </TextBlock>

            <!--More Button-->
            <Button x:Name="Template_MoreButton"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    Style="{StaticResource AppFontIconNormalButtonStyle}"
                    Content="&#xE712;"
                    CornerRadius="4,8,4,4"
                    IsTabStop="False"
                    Visibility="Collapsed">
              <Button.Flyout>
                <CommandBarFlyout Placement="Bottom"
                                  AlwaysExpanded="True">
                  <AppBarButton Label="View"
                                Icon="{ui:FontIcon Glyph=&#xE8AD;}"
                                Command="{x:Bind OpenWindowCommand}"
                                CommandParameter="{StaticResource BooleanTrue}" />
                  <AppBarButton Label="Share"
                                Icon="Share" />
                  <AppBarButton x:Name="Template_RemoveNoteButton"
                                Label="Remove"
                                Icon="Delete"
                                Visibility="{x:Bind Note.IsTrashed, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                Command="{x:Bind RemoveNoteCommand}" />
                  <AppBarButton x:Name="Template_RestoreNoteButton"
                                Label="Restore"
                                Icon="Refresh"
                                Visibility="{x:Bind Note.IsTrashed, Converter={StaticResource BoolToVisibilityConverter}}"
                                Command="{x:Bind RestoreNoteCommand}" />
                  <CommandBarFlyout.SecondaryCommands>
                    <AppBarButton x:Name="Template_MoveToBoardButton"
                                  Label="Move to board"
                                  Icon="{ui:FontIcon Glyph=&#xE8DE;}"
                                  Command="{x:Bind ShowMoveNoteToBoardDialogCommand}" />
                    <AppBarButton x:Name="Template_RenameTitleButton"
                                  Label="Rename title"
                                  Icon="{ui:FontIcon Glyph=&#xE8AC;}"
                                  Command="{x:Bind ShowRenameNoteTitleDialogCommand}" />
                    <AppBarButton x:Name="Template_EditTagsButton"
                                  Label="Edit tags"
                                  Icon="{ui:FontIcon Glyph=&#xE932;}"
                                  Command="{x:Bind ShowEditNoteTagsDialogCommmand}" />
                    <AppBarSeparator />
                    <AppBarButton Label="About"
                                  Icon="{ui:FontIcon Glyph=&#xE946;}"
                                  Command="{x:Bind ShowNoteInformationDialogOnMainCommand}" />
                  </CommandBarFlyout.SecondaryCommands>
                </CommandBarFlyout>
              </Button.Flyout>
            </Button>
          </Grid>

          <!--Note Body-->
          <TextBlock x:Name="Template_BodyTextBlock"
                     Grid.Row="1"
                     Margin="6"
                     Text="{x:Bind Note.Preview, Mode=OneWay}"
                     TextWrapping="Wrap">
            <interactivity:Interaction.Behaviors>
              <interactivity:EventTriggerBehavior EventName="DoubleTapped">
                <interactivity:InvokeCommandAction Command="{x:Bind OpenWindowCommand}"
                                                   CommandParameter="{x:Bind Note.IsTrashed, Converter={StaticResource BoolNegationConverter}}" />
              </interactivity:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
          </TextBlock>

          <!--Note CommandBar-->
          <Grid x:Name="Template_CommandBarGrid"
                Grid.Row="1"
                Visibility="Collapsed"
                VerticalAlignment="Bottom">
            <ScrollViewer HorizontalScrollMode="Enabled"
                          VerticalScrollMode="Disabled"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Disabled">
              <ItemsRepeater ItemsSource="{x:Bind Note.Tags}"
                             Margin="4">
                <ItemsRepeater.Layout>
                  <StackLayout Orientation="Horizontal"
                               Spacing="6" />
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate x:DataType="model:Tag">
                    <view:AppTagButton Background="{x:Bind Color, Converter={StaticResource TagColorToBackgroundBrushConverter}}"
                                       Foreground="{x:Bind Color, Converter={StaticResource TagColorToForegroundBrushConverter}}"
                                       DeleteButtonVisible="Collapsed"
                                       IsTabStop="False">
                      <TextBlock Text="{x:Bind Text}"
                                 TextTrimming="CharacterEllipsis" />
                    </view:AppTagButton>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>
              </ItemsRepeater>
            </ScrollViewer>
          </Grid>

          <!--Visual States-->
          <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="HoverStates">
              <VisualState x:Name="HoverStateNormal" />
              <VisualState x:Name="HoverStateHovering">
                <Storyboard>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Template_CommandBarGrid"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Template_BookmarkButton"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Template_MoreButton"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>
            </VisualStateGroup>
          </VisualStateManager.VisualStateGroups>
        </Grid>
      </UserControl>
    </DataTemplate>
    <!--#endregion-->

    <!--#region GridView ItemTemplate: List Style-->
    <DataTemplate x:Key="GridViewItemTemplate_ListStyle"
                  x:DataType="viewmodel:NoteViewModel">
      <UserControl x:Name="Template_RootUserControl"
                   Margin="6"
                   PointerEntered="Template_RootUserControl_PointerEntered"
                   PointerExited="Template_RootUserControl_PointerExited">
        <Grid x:Name="Template_RootGrid"
              Background="{x:Bind Note.Background, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}"
              CornerRadius="8"
              BorderBrush="{StaticResource ControlStrokeColorDefaultBrush}"
              BorderThickness="1"
              Translation="0,0,12">

          <Grid.Shadow>
            <ThemeShadow />
          </Grid.Shadow>

          <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="120"
                              MaxWidth="200" />
            <ColumnDefinition Width="5*" />
          </Grid.ColumnDefinitions>

          <!--Note Title-->
          <Grid Grid.Column="0"
                Background="{StaticResource SubtleFillColorSecondary}"
                BorderBrush="{StaticResource ControlStrokeColorDefaultBrush}"
                BorderThickness="0,0,1,0">
            <TextBlock Padding="6"
                       VerticalAlignment="Center"
                       TextAlignment="Center"
                       Text="{x:Bind Note.Title, Mode=OneWay}"
                       TextTrimming="CharacterEllipsis"
                       Style="{StaticResource BodyStrongTextBlockStyle}">
              <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="DoubleTapped">
                  <interactivity:InvokeCommandAction Command="{x:Bind OpenWindowCommand}"
                                                     CommandParameter="{x:Bind Note.IsTrashed, Converter={StaticResource BoolNegationConverter}}" />
                </interactivity:EventTriggerBehavior>
              </interactivity:Interaction.Behaviors>
            </TextBlock>
          </Grid>

          <!--Note Body-->
          <TextBlock x:Name="Template_BodyTextBlock"
                     Grid.Column="1"
                     Margin="6"
                     Text="{x:Bind Note.Preview, Mode=OneWay}"
                     TextWrapping="Wrap">
              <interactivity:Interaction.Behaviors>
                <interactivity:EventTriggerBehavior EventName="DoubleTapped">
                  <interactivity:InvokeCommandAction Command="{x:Bind OpenWindowCommand}"
                                                     CommandParameter="{x:Bind Note.IsTrashed, Converter={StaticResource BoolNegationConverter}}" />
                </interactivity:EventTriggerBehavior>
              </interactivity:Interaction.Behaviors>
          </TextBlock>

          <!--Note CommandBar-->
          <Grid x:Name="Template_CommandBarGrid"
                Grid.Column="1"
                VerticalAlignment="Bottom"
                Visibility="Collapsed"
                Background="{x:Bind Note.Background, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--Note Tags-->
            <ScrollViewer Grid.Column="0"
                          HorizontalScrollMode="Enabled"
                          VerticalScrollMode="Disabled"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Disabled">
              <ItemsRepeater ItemsSource="{x:Bind Note.Tags}"
                             Margin="4,0">
                <ItemsRepeater.Layout>
                  <StackLayout Orientation="Horizontal"
                               Spacing="4" />
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate x:DataType="model:Tag">
                    <view:AppTagButton>
                      <TextBlock Text="{x:Bind Text}"
                                 TextTrimming="CharacterEllipsis" />
                    </view:AppTagButton>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>
              </ItemsRepeater>
            </ScrollViewer>

            <!--Command Buttons-->
            <StackPanel Grid.Column="1"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">

              <!--Bookmark Button-->
              <Button x:Name="Template_BookmarkButton"
                      Style="{StaticResource AppFontIconNormalButtonStyle}"
                      Content="{x:Bind Note.IsBookmarked, Converter={StaticResource BoolToBookmarkIconGlyphConverter}, Mode=OneWay}"
                      CornerRadius="8,4,4,4"
                      Command="{x:Bind BookmarkNoteCommand}" />

              <!--More Button-->
              <Button x:Name="Template_MoreButton"
                      Style="{StaticResource AppFontIconNormalButtonStyle}"
                      Content="&#xE712;"
                      CornerRadius="4,8,4,4">
                <Button.Flyout>
                  <CommandBarFlyout Placement="TopEdgeAlignedRight"
                                    AlwaysExpanded="True">
                    <AppBarButton Label="View"
                                  Icon="{ui:FontIcon Glyph=&#xE8AD;}" />
                    <AppBarButton Label="Share"
                                  Icon="Share" />
                    <AppBarButton x:Name="Template_RemoveNoteButton"
                                  Label="Remove"
                                  Icon="Delete"
                                  Command="{x:Bind RemoveNoteCommand}" />
                    <CommandBarFlyout.SecondaryCommands>
                      <AppBarButton x:Name="Template_MoveToBoardButton"
                                    Label="Move to board"
                                    Icon="{ui:FontIcon Glyph=&#xE8DE;}"
                                    Command="{x:Bind MoveNoteToBoardCommand}" />
                      <AppBarButton x:Name="Template_RenameTitleButton"
                                    Label="Rename title"
                                    Icon="{ui:FontIcon Glyph=&#xE8AC;}"
                                    Command="{x:Bind ShowRenameNoteTitleDialogCommand}" />
                      <AppBarButton x:Name="Template_EditTagsButton"
                                    Label="Edit tags"
                                    Icon="{ui:FontIcon Glyph=&#xE932;}" />
                      <AppBarSeparator />
                      <AppBarButton Label="About"
                                    Icon="{ui:FontIcon Glyph=&#xE946;}" />
                    </CommandBarFlyout.SecondaryCommands>
                  </CommandBarFlyout>
                </Button.Flyout>
              </Button>
            </StackPanel>
          </Grid>

          <!--Visual States-->
          <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="HoverStates">
              <VisualState x:Name="HoverStateNormal" />
              <VisualState x:Name="HoverStateHovering">
                <Storyboard>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Template_CommandBarGrid"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>
            </VisualStateGroup>
          </VisualStateManager.VisualStateGroups>
        </Grid>
      </UserControl>
    </DataTemplate>
    <!--#endregion-->
  </Page.Resources>

  <Grid x:Name="View_RootGrid">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <!--#region Navigation Header -->
    <Grid x:Name="View_HeaderGrid"
          Margin="0,0,4,0"
          Padding="4"
          CornerRadius="{StaticResource ControlCornerRadius}"
          Canvas.ZIndex="1">
      <Grid.BackgroundTransition>
        <BrushTransition />
      </Grid.BackgroundTransition>

      <Grid.Shadow>
        <ThemeShadow />
      </Grid.Shadow>

      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <!--#region Icon -->
      <view:IconPicker Icon="{x:Bind Navigation.Icon, Mode=OneWay}"
                       IconChanged="View_IconPicker_IconChanged"
                       Visibility="{x:Bind Navigation, Converter={StaticResource NavigationUserBoardToVisibilityConverter}}"
                       Margin="0,0,4,0" />
      <!--#endregion-->

      <!--#region Title -->
      <StackPanel Grid.Column="1"
                  Orientation="Horizontal"
                  Spacing="6"
                  Margin="4,0" >
        <TextBlock Text="{x:Bind Navigation.Name, Mode=OneWay}"
                   Style="{StaticResource TitleTextBlockStyle}"
                   TextWrapping="NoWrap" />
        <TextBlock Text="{x:Bind FormatCount(ViewModel.NoteCount), Mode=OneWay}"
                   Style="{StaticResource TitleTextBlockStyle}"
                   Visibility="{x:Bind ViewModel.DisplayNoteCount}"/>
      </StackPanel>

      <!--#endregion -->

      <StackPanel Grid.Column="2"
                  Orientation="Horizontal">
        <!--#region New Note Button -->
        <view:AppCompoundButton x:Name="View_NewNoteButton"
                                Icon="Add"
                                Content="New note"
                                Style="{StaticResource AppCommandBarButtonStyle}"
                                Visibility="{x:Bind Navigation, Converter={StaticResource NavigationUserBoardToVisibilityConverter}}"
                                Command="{x:Bind ViewModel.AddNewNoteCommand}" />
        <!--#endregion-->

        <!--#region More Button -->
        <Button x:Name="View_MoreButton"
                Style="{StaticResource AppFontIconMediumButtonStyle}"
                Content="&#xE712;">
          <Button.Flyout>
            <MenuFlyout Placement="BottomEdgeAlignedRight">
              <MenuFlyout.MenuFlyoutPresenterStyle>
                <Style TargetType="MenuFlyoutPresenter"
                       BasedOn="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                  <Setter Property="Background"
                          Value="{ThemeResource FlyoutPresenterBackground}" />
                </Style>
              </MenuFlyout.MenuFlyoutPresenterStyle>

              <!-- Rename Title -->
              <MenuFlyoutItem Text="Rename title"
                              Icon="Rename"
                              Visibility="{x:Bind Navigation, Converter={StaticResource NavigationUserBoardToVisibilityConverter}}"
                              Command="{x:Bind ViewModel.ShowRenameBoardDialogCommand}" />

              <MenuFlyoutSeparator Visibility="{x:Bind Navigation, Converter={StaticResource NavigationUserBoardToVisibilityConverter}}" />

              <!-- Sort & Ordering -->
              <MenuFlyoutSubItem x:Name="View_SortMenuFlyoutSubItem"
                                 Text="Ordering"
                                 Icon="Sort">
                <RadioMenuFlyoutItem GroupName="SortField"
                                     Text="Modified"
                                     Command="{x:Bind ViewModel.ChangeSortFieldCommand}"
                                     CommandParameter="Modified" />
                <RadioMenuFlyoutItem GroupName="SortField"
                                     Text="Created"
                                     Command="{x:Bind ViewModel.ChangeSortFieldCommand}"
                                     CommandParameter="Created" />
                <RadioMenuFlyoutItem GroupName="SortField"
                                     Text="Title"
                                     Command="{x:Bind ViewModel.ChangeSortFieldCommand}"
                                     CommandParameter="Title" />
                <MenuFlyoutSeparator />
                <RadioMenuFlyoutItem GroupName="SortDirection"
                                     Text="Ascending"
                                     Command="{x:Bind ViewModel.ChangeSortDirectionCommand}"
                                     CommandParameter="Ascending" />
                <RadioMenuFlyoutItem GroupName="SortDirection"
                                     Text="Descending"
                                     Command="{x:Bind ViewModel.ChangeSortDirectionCommand}"
                                     CommandParameter="Descending" />
              </MenuFlyoutSubItem>

              <!-- GridView Style -->
              <MenuFlyoutSubItem Text="View Style"
                                 Icon="View">
                <view:AppMenuFlyoutItem>
                  <StackPanel Spacing="12">
                    <!-- Style: Grid / List View -->
                    <RadioButtons x:Name="View_StyleChangeRadioButtons"
                                  Header="View Style"
                                  HeaderTemplate="{StaticResource AppBoldTextHeaderTemplate}"
                                  MaxColumns="2">
                      <RadioButtons.Resources>
                        <SolidColorBrush x:Key="ToggleButtonBackground"
                                         Color="{StaticResource SubtleFillColorTransparent}" />
                        <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver"
                                         Color="{StaticResource SubtleFillColorSecondary}" />
                        <SolidColorBrush x:Key="ToggleButtonBackgroundPressed"
                                         Color="{StaticResource SubtleFillColorTertiary}" />
                        <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled"
                                         Color="{StaticResource SubtleFillColorDisabled}" />
                      </RadioButtons.Resources>

                      <RadioButton GroupName="Style"
                                   Tag="Grid"
                                   Style="{StaticResource DefaultToggleButtonStyle}"
                                   Click="View_StyleChangeRadioButton_Click">
                        <StackPanel Orientation="Horizontal"
                                    Spacing="8">
                          <FontIcon Glyph="&#xF0E2;"
                                    FontSize="18" />
                          <TextBlock Text="Grid" />
                        </StackPanel>
                      </RadioButton>

                      <RadioButton GroupName="Style"
                                   Tag="List"
                                   Style="{StaticResource DefaultToggleButtonStyle}"
                                   Click="View_StyleChangeRadioButton_Click">
                        <StackPanel Orientation="Horizontal"
                                    Spacing="8">
                          <FontIcon Glyph="&#xE71D;"
                                    FontSize="18" />
                          <TextBlock Text="List" />
                        </StackPanel>
                      </RadioButton>
                    </RadioButtons>

                    <MenuFlyoutSeparator />

                    <!-- Style: View Size-->
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Slider x:Name="View_StyleSizeChangeSlider"
                              Grid.Row="0"
                              Header="Size"
                              HeaderTemplate="{StaticResource AppBoldTextHeaderTemplate}"
                              Orientation="Horizontal"
                              TickFrequency="40"
                              TickPlacement="Outside"
                              Minimum="200"
                              Maximum="440"
                              Value="{x:Bind SizeSliderValue, Mode=TwoWay}"
                              Width="240"
                              SnapsTo="Ticks"
                              IsThumbToolTipEnabled="False" />
                      <Grid Grid.Row="1">
                        <TextBlock Text="Small"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                        <TextBlock Text="Medium"
                                   HorizontalAlignment="Center"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                        <TextBlock Text="Large"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                      </Grid>
                    </Grid>

                    <!-- Style: View Ratio -->
                    <Grid Visibility="{Binding ElementName=View_StyleChangeRadioButtons, Path=SelectedIndex, Converter={StaticResource IntZeroToVisibilityConverter}}">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Slider x:Name="View_StyleRatioChangeSlider"
                              Grid.Row="0"
                              Header="Vertical ratio"
                              HeaderTemplate="{StaticResource AppBoldTextHeaderTemplate}"
                              Orientation="Horizontal"
                              TickFrequency="50"
                              TickPlacement="Outside"
                              Minimum="0"
                              Maximum="200"
                              Value="{x:Bind RatioSliderValue, Mode=TwoWay}"
                              Width="240"
                              SnapsTo="Ticks"
                              IsThumbToolTipEnabled="False" />
                      <Grid Grid.Row="1">
                        <TextBlock Text="Short"
                                   HorizontalAlignment="Left"
                                   TextAlignment="Center"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                        <TextBlock Text="Moderate"
                                   HorizontalAlignment="Center"
                                   TextAlignment="Center"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                        <TextBlock Text="Tall"
                                   HorizontalAlignment="Right"
                                   TextAlignment="Center"
                                   Style="{StaticResource CaptionTextBlockStyle}" />
                      </Grid>
                    </Grid>
                  </StackPanel>
                </view:AppMenuFlyoutItem>
              </MenuFlyoutSubItem>
              <MenuFlyoutSeparator />

              <MenuFlyoutItem x:Name="View_EditNotesMenuFlyoutItem"
                              Text="Edit notes"
                              Icon="Edit"
                              Click="View_EditNotesMenuFlyoutItem_Click" />

              <MenuFlyoutItem Text="Delete board"
                              Icon="Delete"
                              Visibility="{x:Bind Navigation, Converter={StaticResource NavigationUserBoardToVisibilityConverter}}"
                              Command="{x:Bind ViewModel.ShowDeleteBoardDialogCommand}" />
            </MenuFlyout>
          </Button.Flyout>
        </Button>
        <!--#endregion-->
      </StackPanel>

      <Grid x:Name="View_MultiSelectionCommandGrid"
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Visibility="Collapsed">

        <Grid.RenderTransform>
          <TranslateTransform x:Name="View_MultiSelectionCommandGrid_TranslateTransform" />
        </Grid.RenderTransform>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center">
          <AppBarToggleButton x:Name="View_SelectAllAppBarToggleButton"
                              Label="Select all"
                              Icon="Accept"
                              IsChecked="{x:Bind ViewModel.IsChecked, Mode=TwoWay}"
                              Click="View_SelectAllAppBarToggleButton_Click" />
          <AppBarSeparator />
          <AppBarButton Label="Move"
                        Icon="MoveToFolder"
                        Command="{x:Bind ViewModel.ShowMoveNoteToBoardDialogCommand}"
                        CommandParameter="{Binding ElementName=View_NotesGridView, Path=SelectedItems}" />
          <AppBarButton Label="Remove"
                        Icon="Delete"
                        Command="{x:Bind ViewModel.RemoveNotesCommand}"
                        CommandParameter="{Binding ElementName=View_NotesGridView, Path=SelectedItems}" />
          <AppBarSeparator />
          <AppBarButton Label="Revert"
                        Icon="Refresh"
                        Click="View_RevertAppBarButton_Click" />
        </StackPanel>
      </Grid>
    </Grid>
    <!--#endregion-->

    <ProgressBar Grid.Row="1"
                 IsIndeterminate="True"
                 Visibility="{x:Bind ViewModel.IsNotesLoading, Mode=OneWay}"
                 Margin="8,0" />

    <!--#region Notes List GridView -->
    <GridView x:Name="View_NotesGridView"
              Grid.Row="2"
              Padding="0,4"
              ItemsSource="{Binding Source={StaticResource NotesCollectionViewSource}}"
              SelectionMode="None"
              HorizontalAlignment="Center"
              CanDragItems="True"
              DragItemsStarting="View_NotesGridView_DragItemsStarting"
              TabNavigation="Local"
              TabFocusNavigation="Local"
              AllowFocusOnInteraction="False"
              ContainerContentChanging="View_NotesGridView_ContainerContentChanging"
              ChoosingItemContainer="View_NotesGridView_ChoosingItemContainer"
              SelectionChanged="View_NotesGridView_SelectionChanged" />
    <!--#endregion-->

    <!--#region VisualStateManager -->
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="NotesGridViewHorizontalAlignmentStates">
        <VisualState x:Name="NotesGridViewCenter">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="642" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="View_NotesGridView.HorizontalAlignment"
                    Value="Stretch" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup x:Name="EditModeStates">
        <VisualState x:Name="EditModeNormal" />
        <VisualState x:Name="EditModeEdit">
          <VisualState.Setters>
            <Setter Target="View_NewNoteButton.IsEnabled"
                    Value="False" />
            <Setter Target="View_MoreButton.IsEnabled"
                    Value="False" />
            <Setter Target="View_HeaderGrid.Background"
                    Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
            <Setter Target="View_HeaderGrid.BorderBrush"
                    Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
            <Setter Target="View_HeaderGrid.BorderThickness"
                    Value="1" />
            <Setter Target="View_MultiSelectionCommandGrid.Visibility"
                    Value="Visible" />
            <Setter Target="View_NotesGridView.SelectionMode"
                    Value="Multiple" />
          </VisualState.Setters>
          <Storyboard>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="View_MultiSelectionCommandGrid_TranslateTransform"
                                           Storyboard.TargetProperty="Y">
              <DiscreteDoubleKeyFrame KeyTime="0"
                                      Value="-16" />
              <SplineDoubleKeyFrame KeyTime="0:0:0.25"
                                    KeySpline="0.2,0.7 0.5,1.0"
                                    Value="0" />
            </DoubleAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <!--#endregion-->
  </Grid>
</Page>
