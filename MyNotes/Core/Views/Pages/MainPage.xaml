<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="MyNotes.Core.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:ui="using:CommunityToolkit.WinUI"
      xmlns:models="using:MyNotes.Core.Models"
      xmlns:views="using:MyNotes.Core.Views"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity">

  <Page.Resources>
    <SolidColorBrush x:Key="NavigationViewContentBackground"
                     Color="Transparent" />
    <Thickness x:Key="NavigationViewContentGridBorderThickness">0</Thickness>
    <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0</Thickness>
    <SolidColorBrush x:Key="TitleBarBackButtonBackgroundDisabled"
                     Color="{ThemeResource SubtleFillColorDisabled}" />
    <x:Double x:Key="TitleBarCompactHeight">40</x:Double>
    <views:MainNavigationViewMenuItemTemplateSelector x:Key="MainNavigationViewMenuItemTemplateSelector">
      <!--#region MenuItemTemplate: Menu Item-->
      <views:MainNavigationViewMenuItemTemplateSelector.MenuItemTemplate>
        <DataTemplate x:DataType="models:NavigationItem">
          <NavigationViewItem DataContext="{x:Bind}"
                              Content="{x:Bind Name, Mode=OneWay}"
                              IsEnabled="{x:Bind IsEditable, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                              SelectsOnInvoked="{x:Bind SelectsOnInvoked, Mode=OneWay}">
            <NavigationViewItem.Icon>
              <IconSourceElement IconSource="{x:Bind Icon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
            </NavigationViewItem.Icon>
          </NavigationViewItem>
        </DataTemplate>
      </views:MainNavigationViewMenuItemTemplateSelector.MenuItemTemplate>
      <!--#endregion-->

      <!--#region SeparatorTemplate-->
      <views:MainNavigationViewMenuItemTemplateSelector.SeparatorTemplate>
        <DataTemplate x:DataType="models:NavigationSeparator">
          <NavigationViewItemSeparator />
        </DataTemplate>
      </views:MainNavigationViewMenuItemTemplateSelector.SeparatorTemplate>
      <!--#endregion-->

      <!--#region MenuItemTemplate: Board Group-->
      <views:MainNavigationViewMenuItemTemplateSelector.BoardGroupMenuItemTemplate>
        <DataTemplate x:DataType="models:NavigationBoardGroup">
          <views:AppNavigationViewItem DataContext="{x:Bind}"
                                       MenuItemsSource="{x:Bind Children}"
                                       IsExpanded="False"
                                       CanDrag="{x:Bind IsEditable, Mode=OneWay}"
                                       PresenterDragStarting="NavigationViewItem_DragStarting"
                                       PresenterDropCompleted="NavigationViewItem_DropCompleted"
                                       AllowDrop="{x:Bind IsEditable, Mode=OneWay}"
                                       DragOver="GroupNavigationViewItem_DragOver"
                                       DragLeave="NavigationViewItem_DragLeave"
                                       Drop="NavigationViewItem_DragLeave"
                                       SelectsOnInvoked="{x:Bind IsEditable, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <views:AppNavigationViewItem.Resources>
              <x:Double x:Key="NavigationViewItemOnLeftMinHeight">32</x:Double>
            </views:AppNavigationViewItem.Resources>
            <views:AppNavigationViewItem.Content>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Text="{x:Bind Name, Mode=OneWay}"
                           VerticalAlignment="Center"
                           TextTrimming="CharacterEllipsis"
                           FontWeight="SemiBold" />
                <Button Grid.Column="1"
                        Style="{StaticResource AppFontIconMediumButtonStyle}"
                        Content="&#xE712;"
                        Width="24"
                        Height="24"
                        Visibility="{x:Bind IsEditable, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
              </Grid>
            </views:AppNavigationViewItem.Content>
            <views:AppNavigationViewItem.Icon>
              <IconSourceElement IconSource="{x:Bind Icon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
            </views:AppNavigationViewItem.Icon>
            <views:AppNavigationViewItem.ContextFlyout>
              <MenuFlyout x:Name="Template_Group_ContextMenuFlyout"
                          Placement="Bottom">
                <views:AppMenuFlyoutItem>
                  <TextBlock Text="{x:Bind Name, Mode=OneWay}"
                             Style="{StaticResource BodyStrongTextBlockStyle}" />
                </views:AppMenuFlyoutItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem x:Name="Template_Group_RenameMenuFlyoutItem"
                                Text="Rename"
                                Icon="Rename"
                                Click="Template_Board_RenameMenuFlyoutItem_Click" />
                <MenuFlyoutItem x:Name="Template_Group_NewGroupMenuFlyoutItem"
                                Text="New group"
                                Icon="{ui:FontIcon Glyph=&#xE82E;}"
                                Click="Template_Group_NewGroupMenuFlyoutItem_Click" />
                <MenuFlyoutItem x:Name="Template_Group_NewBoardMenuFlyoutItem"
                                Text="New board"
                                Icon="{ui:FontIcon Glyph=&#xED0E;}"
                                Click="Template_Group_NewBoardMenuFlyoutItem_Click" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem x:Name="Template_Group_RemoveMenuFlyoutItem"
                                Text="Remove"
                                Icon="Delete"
                                Click="Template_Board_RemoveMenuFlyoutItem_Click" />
              </MenuFlyout>
            </views:AppNavigationViewItem.ContextFlyout>
          </views:AppNavigationViewItem>
        </DataTemplate>
      </views:MainNavigationViewMenuItemTemplateSelector.BoardGroupMenuItemTemplate>
      <!--#endregion-->

      <!--#region MenuItemTemplate: Board-->
      <views:MainNavigationViewMenuItemTemplateSelector.BoardMenuItemTemplate>
        <DataTemplate x:DataType="models:NavigationBoard">
          <views:AppNavigationViewItem DataContext="{x:Bind}"
                                       CanDrag="{x:Bind IsEditable, Mode=OneWay}"
                                       PresenterDragStarting="NavigationViewItem_DragStarting"
                                       PresenterDropCompleted="NavigationViewItem_DropCompleted"
                                       AllowDrop="{x:Bind IsEditable, Mode=OneWay}"
                                       DragOver="ItemNavigationViewItem_DragOver"
                                       DragLeave="NavigationViewItem_DragLeave"
                                       SelectsOnInvoked="{x:Bind IsEditable, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <views:AppNavigationViewItem.Resources>
              <x:Double x:Key="NavigationViewItemOnLeftMinHeight">32</x:Double>
            </views:AppNavigationViewItem.Resources>
            <views:AppNavigationViewItem.Content>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Bind Name, Mode=OneWay}"
                           VerticalAlignment="Center"
                           TextTrimming="CharacterEllipsis" />
                <Button Grid.Column="1"
                        Style="{StaticResource AppFontIconMediumButtonStyle}"
                        Content="&#xE712;"
                        Width="24"
                        Height="24"
                        Visibility="{x:Bind IsEditable, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
              </Grid>
            </views:AppNavigationViewItem.Content>
            <views:AppNavigationViewItem.Icon>
              <IconSourceElement IconSource="{x:Bind Icon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
            </views:AppNavigationViewItem.Icon>
            <views:AppNavigationViewItem.ContextFlyout>
              <MenuFlyout Placement="Bottom">
                <views:AppMenuFlyoutItem>
                  <TextBlock Text="{x:Bind Name}"
                             Style="{StaticResource BodyStrongTextBlockStyle}" />
                </views:AppMenuFlyoutItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem x:Name="Template_Board_RenameMenuFlyoutItem"
                                Text="Rename"
                                Icon="Rename"
                                Click="Template_Board_RenameMenuFlyoutItem_Click" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem x:Name="Template_Board_RemoveMenuFlyoutItem"
                                Text="Remove"
                                Icon="Delete"
                                Click="Template_Board_RemoveMenuFlyoutItem_Click" />
              </MenuFlyout>
            </views:AppNavigationViewItem.ContextFlyout>
          </views:AppNavigationViewItem>
        </DataTemplate>
      </views:MainNavigationViewMenuItemTemplateSelector.BoardMenuItemTemplate>
    </views:MainNavigationViewMenuItemTemplateSelector>
    <!--#endregion-->
  </Page.Resources>

  <Grid x:Name="View_RootGrid">
    <Grid.RowDefinitions>
      <RowDefinition Height="48" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <TitleBar x:Name="View_TitleBar"
              Grid.Row="0"
              IsBackButtonEnabled="{Binding ElementName=View_NavigationContent_RootFrame, Path=CanGoBack}"
              IsBackButtonVisible="{x:Bind ViewModel.IsEditMode, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
              BackRequested="View_TitleBar_BackRequested"
              IsPaneToggleButtonVisible="True"
              PaneToggleRequested="View_TitleBar_PaneToggleRequested"
              Margin="2,0,0,0"
              Title="MyNotes">
      <TitleBar.IconSource>
        <ImageIconSource ImageSource="ms-appx:///Assets/icons/app/AppIcon_16.png" />
      </TitleBar.IconSource>

      <!--#region Reference Test-->
      <TitleBar.RightHeader>
        <Button Style="{StaticResource AppFontIconNormalButtonStyle}"
                Width="100"
                Content="&#xEC7A;"
                Click="ViewWindowsButton_Click" />
      </TitleBar.RightHeader>
      <!--#endregion -->
    </TitleBar>

    <NavigationView x:Name="View_NavigationView"
                    Grid.Row="1"
                    IsBackButtonVisible="Collapsed"
                    IsPaneToggleButtonVisible="False"
                    IsSettingsVisible="False"
                    MenuItemTemplateSelector="{StaticResource MainNavigationViewMenuItemTemplateSelector}"
                    MenuItemsSource="{x:Bind ViewModel.MenuItems.View}"
                    FooterMenuItemsSource="{x:Bind ViewModel.NavigationFooterMenus}"
                    SelectedItem="{x:Bind ViewModel.CurrentNavigation}"
                    SelectionChanged="View_NavigationView_SelectionChanged"
                    ItemInvoked="View_NavigationView_ItemInvoked">
      <interactivity:Interaction.Behaviors>
        <interactivity:EventTriggerBehavior EventName="DisplayModeChanged">
          <interactivity:InvokeCommandAction Command="{x:Bind ViewModel.ChangeContentAlignmentCommand}"
                                             CommandParameter="{Binding ElementName=View_NavigationView, Path=DisplayMode}" />
        </interactivity:EventTriggerBehavior>
      </interactivity:Interaction.Behaviors>
      <NavigationView.AutoSuggestBox>
        <AutoSuggestBox x:Name="View_NavigationView_AutoSuggestBox"
                        PlaceholderText="Search notes"
                        QueryIcon="Find"
                        QuerySubmitted="AutoSuggestBox_QuerySubmitted"
                        IsEnabled="{x:Bind ViewModel.IsEditMode, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}">
        </AutoSuggestBox>
      </NavigationView.AutoSuggestBox>

      <NavigationView.Content>
        <Frame x:Name="View_NavigationContent_RootFrame"
               Padding="12,0,0,0"
               Navigated="View_NavigationContent_RootFrame_Navigated" />
      </NavigationView.Content>

      <NavigationView.PaneFooter>
        <StackPanel Spacing="4">
          <Grid Padding="4,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <views:AppCompoundButton x:Name="View_NavigationViewFooter_NewGroupButton"
                                     Grid.Column="0"
                                     Content="New group"
                                     Icon="{ui:FontIcon Glyph=&#xE82E;}"
                                     IsEnabled="{x:Bind ViewModel.IsEditMode, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                                     Style="{StaticResource AppNavigationButtonStyle}"
                                     Click="View_NavigationViewFooter_NewGroupButton_Click" />
            <views:AppCompoundButton x:Name="View_NavigationViewFooter_NewBoardButton"
                                     Grid.Column="1"
                                     Content="New board"
                                     IsEnabled="{x:Bind ViewModel.IsEditMode, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                                     Icon="{ui:FontIcon Glyph=&#xED0E;}"
                                     Style="{StaticResource AppNavigationButtonStyle}"
                                     Click="View_NavigationViewFooter_NewBoardButton_Click" />
            <views:AppCompoundButton x:Name="View_NavigationViewFooter_EditNavigationViewItem"
                                     Grid.Column="2"
                                     Icon="{ui:FontIcon Glyph=&#xE932;}"
                                     Style="{StaticResource AppNavigationButtonStyle}"
                                     ToolTipService.ToolTip="Edit"
                                     Command="{x:Bind ViewModel.SetNavigationEditModeCommand}" />
          </Grid>
          <NavigationViewItemSeparator />
        </StackPanel>
      </NavigationView.PaneFooter>
    </NavigationView>

    <TeachingTip x:Name="View_EditTeachingTip"
                 Target="{Binding ElementName=View_NavigationViewFooter_EditNavigationViewItem}"
                 Title="Turn off edit mode to select item."
                 IsLightDismissEnabled="True" />

    <!--#region ContentDialogs -->

    <!--#region Rename Board ContentDialog-->
    <ContentDialog x:Name="View_RenameBoardContentDialog"
                   Title="Rename"
                   PrimaryButtonText="OK"
                   IsPrimaryButtonEnabled="{x:Bind ViewModel.BoardNameToRename, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
                   CloseButtonText="Cancel"
                   DefaultButton="Primary">
      <Grid ColumnSpacing="8">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0"
                Style="{StaticResource AppIconMediumButtonStyle}">
          <IconSourceElement IconSource="{Binding Icon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
          <Button.Flyout>
            <Flyout Placement="BottomEdgeAlignedLeft"
                    ShouldConstrainToRootBounds="False">
              <views:IconPicker Icon="{Binding Icon, Mode=TwoWay}" />
            </Flyout>
          </Button.Flyout>
        </Button>
        <TextBox x:Name="View_RenameBoardInputTextBox"
                 Grid.Column="1"
                 Text="{x:Bind ViewModel.BoardNameToRename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Center"
                 PlaceholderText="Enter name" />
      </Grid>
    </ContentDialog>
    <!--#endregion-->

    <!--#region Rename Note Title ContentDialog-->
    <ContentDialog x:Name="View_RenameNoteTitleContentDialog"
                   Title="Rename"
                   PrimaryButtonText="OK"
                   IsPrimaryButtonEnabled="{x:Bind ViewModel.NoteTitleToRename, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
                   CloseButtonText="Cancel"
                   DefaultButton="Primary">
      <Grid ColumnSpacing="8">
        <TextBox x:Name="View_RenameNoteTitleInputTextBox"
                 Grid.Column="1"
                 Text="{x:Bind ViewModel.NoteTitleToRename, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Center"
                 PlaceholderText="Enter name" />
      </Grid>
    </ContentDialog>
    <!--#endregion-->

    <!--#region New Board Group ContentDialog -->
    <ContentDialog x:Name="View_NewGroupContentDialog"
                   Title="New group"
                   PrimaryButtonText="Add"
                   IsPrimaryButtonEnabled="{x:Bind ViewModel.NewBoardGroupName, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
                   PrimaryButtonCommand="{x:Bind ViewModel.AddNavigationBoardGroupCommand}"
                   CloseButtonText="Cancel"
                   DefaultButton="Primary">
      <Grid Margin="0,12,0,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0"
                Style="{StaticResource AppIconMediumButtonStyle}">
          <IconSourceElement IconSource="{x:Bind ViewModel.NewBoardGroupIcon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
          <Button.Flyout>
            <Flyout Placement="BottomEdgeAlignedLeft"
                    ShouldConstrainToRootBounds="False">
              <views:IconPicker Icon="{x:Bind ViewModel.NewBoardGroupIcon, Mode=TwoWay}" />
            </Flyout>
          </Button.Flyout>
        </Button>
        <TextBox x:Name="View_NewGroupInputTextBox"
                 Grid.Column="1"
                 Text="{x:Bind ViewModel.NewBoardGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Center"
                 PlaceholderText="Enter group name" />
      </Grid>

    </ContentDialog>
    <!--#endregion-->

    <!--#region New Board ContentDialog -->
    <ContentDialog x:Name="View_NewBoardContentDialog"
                   Title="New board"
                   PrimaryButtonText="Add"
                   IsPrimaryButtonEnabled="{x:Bind ViewModel.NewBoardName, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
                   PrimaryButtonCommand="{x:Bind ViewModel.AddNavigationBoardCommand}"
                   CloseButtonText="Cancel"
                   DefaultButton="Primary">
      <Grid Margin="0,12,0,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0"
                Style="{StaticResource AppIconMediumButtonStyle}">
          <IconSourceElement IconSource="{x:Bind ViewModel.NewBoardIcon, Converter={StaticResource IconToIconSourceConverter}, Mode=OneWay}" />
          <Button.Flyout>
            <Flyout Placement="BottomEdgeAlignedLeft"
                    ShouldConstrainToRootBounds="False">
              <views:IconPicker Icon="{x:Bind ViewModel.NewBoardIcon, Mode=TwoWay}" />
            </Flyout>
          </Button.Flyout>
        </Button>
        <TextBox x:Name="View_NewBoardInputTextBox"
                 Grid.Column="1"
                 Text="{x:Bind ViewModel.NewBoardName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Center"
                 PlaceholderText="Enter board name" />
      </Grid>
    </ContentDialog>
    <!--#endregion-->

    <!--#region Remove ContentDialog -->
    <ContentDialog x:Name="View_RemoveBoardContentDialog"
                   Title="Remove"
                   PrimaryButtonText="OK"
                   CloseButtonText="Cancel"
                   DefaultButton="Close">
      <TextBlock Text="All subboards and notes will be removed" />
    </ContentDialog>
    <!--#endregion -->
    <!--#endregion-->
  </Grid>

  <FlyoutBase.AttachedFlyout>
    <Flyout x:Name="View_TagsFlyout"
            Placement="RightEdgeAlignedTop">
      <Flyout.FlyoutPresenterStyle>
        <Style TargetType="FlyoutPresenter"
               BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
          <Setter Property="Padding"
                  Value="0" />
        </Style>
      </Flyout.FlyoutPresenterStyle>
      <views:TagsEditor />
    </Flyout>
  </FlyoutBase.AttachedFlyout>
</Page>
